"""
myparser/__init__.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è
–ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
"""

import logging

logger = logging.getLogger(__name__)

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä
    from .main_parser import (
        UnifiedAIParser,
        DialogueTracker,
        DialogueAnalyzer,
        DialogueContext,
        DialogueParticipant,
        DialogueMessage,
        DialogueAnalysisResult,
        AIAnalysisResult,
        UserContext
    )
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    AIContextParser = UnifiedAIParser
    IntegratedAIContextParser = UnifiedAIParser
    
    __all__ = [
        'AIContextParser',
        'IntegratedAIContextParser', 
        'UnifiedAIParser',
        'DialogueTracker',
        'DialogueAnalyzer',
        'DialogueContext',
        'DialogueParticipant',
        'DialogueMessage',
        'DialogueAnalysisResult',
        'AIAnalysisResult',
        'UserContext'
    ]
    
    logger.info("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π UnifiedAIParser –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    
except ImportError as e:
    # Fallback –Ω–∞ –±–∞–∑–æ–≤—ã–π –ø–∞—Ä—Å–µ—Ä –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä: {e}")
    logger.info("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π fallback –ø–∞—Ä—Å–µ—Ä")
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π fallback –ø–∞—Ä—Å–µ—Ä
    class FallbackParser:
        def __init__(self, config):
            self.config = config
            self.enabled = config.get('parsing', {}).get('enabled', False)
            self.channels = []
            logger.warning("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π fallback –ø–∞—Ä—Å–µ—Ä")
        
        async def process_message(self, update, context):
            logger.info("Fallback parser: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        
        def is_channel_monitored(self, chat_id, username=None):
            return False
        
        def get_status(self):
            return {
                'enabled': False,
                'mode': 'fallback',
                'error': '–û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
            }
    
    # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
    class DialogueTracker:
        def __init__(self, config): pass
    
    class DialogueAnalyzer:
        def __init__(self, config): pass
    
    class DialogueContext: pass
    class DialogueParticipant: pass
    class DialogueMessage: pass
    class DialogueAnalysisResult: pass
    class UserContext: pass
    class AIAnalysisResult: pass
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
    AIContextParser = FallbackParser
    IntegratedAIContextParser = FallbackParser
    UnifiedAIParser = FallbackParser
    
    __all__ = [
        'AIContextParser',
        'IntegratedAIContextParser',
        'UnifiedAIParser',
        'DialogueTracker',
        'DialogueAnalyzer',
        'DialogueContext',
        'DialogueParticipant',
        'DialogueMessage',
        'DialogueAnalysisResult',
        'AIAnalysisResult',
        'UserContext'
    ]